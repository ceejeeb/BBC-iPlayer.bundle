RE_CHANNEL = Regex('iplayer/live/([^/]+)')
RE_JSON = Regex('({"initialState":.+})\);')

TV_CHANNEL_LOOKUP = {
    "bbcone": {"live_id" : "bbc1", "hd_live_id": "bbc_one_hd"},
    "bbctwo": {"live_id" : "bbc2", "hd_live_id": "bbc_two_hd"},
    "bbcthree": {"live_id" : "bbc3", "hd_live_id": "bbc_three_hd"},
    "bbcfour": {"live_id" : "bbc4", "hd_live_id": "bbc_four_hd"},
    "cbbc": {"live_id" : "cbbc", "hd_live_id": "cbbc_hd"},
    "cbeebies": {"live_id" : "cbeebies", "hd_live_id": "cbeebies_hd"},
    "bbcnews": {"live_id" : "news_ch", "hd_live_id": "bbc_news_channel_hd"},
    "bbcparliament": {"live_id" : "bbc_parliament"},
    "bbcalba": {"live_id" : "bbc_alba"},
    "s4c": {"live_id" : "s4cpbs"}
}

##########################################################################################
def NormalizeURL(url):

    return url

##########################################################################################
def MetadataObjectForURL(url):

    page = HTTP.Request(url, cacheTime=0).content
    json = RE_JSON.search(page).group(1)
    json_obj = JSON.ObjectFromString(json)

    for item in json_obj['initialState']['broadcasts']['items']:

        if item['label'] != "On Now":
            continue

        title = item['title']

        if item['subtitle'] != "":
            title = ' - '.join([title, item['subtitle']])

        thumb = item['image'].replace("{recipe}", "640x360")

        return VideoClipObject(
            title = title,
            thumb = thumb
        )

    raise Ex.LiveMediaNotStarted

##########################################################################################
@deferred
def MediaObjectsForURL(url):

    match = RE_CHANNEL.search(url)

    if not match:
        raise Ex.MediaNotAvailable

    channel = match.groups()[0]  
    hls_url = None

    if 'hd_live_id' in TV_CHANNEL_LOOKUP[channel]:
        live_id = TV_CHANNEL_LOOKUP[channel]['hd_live_id']
        hls_url = 'http://a.files.bbci.co.uk/media/live/manifesto/audio_video/simulcast/hls/uk/abr_hdtv/llnw/%s.m3u8' % (live_id)
    else:
        live_id = TV_CHANNEL_LOOKUP[channel]['live_id']
        hls_url = 'http://a.files.bbci.co.uk/media/live/manifesto/audio_video/simulcast/hls/uk/hls_tablet/llnw/%s.m3u8' % (live_id)
    
    # Fix for Plex Web clients(avoid M3U8 cross domain access denied)
    if Client.Product in ['Plex Web'] and Client.Platform not in ['Safari']:
        return [
            MediaObject(
                parts = [
                    PartObject(key=HTTPLiveStreamURL(Callback(PlayVideo, url=hls_url)))
                ],
                video_resolution = 720,
                audio_channels = 2,
                video_frame_rate = 50,
                optimized_for_streaming = True
            )
        ]
    else:
        return [
            MediaObject(
                parts = [
                    PartObject(key=HTTPLiveStreamURL(hls_url))
                ],
                video_resolution = 720,
                audio_channels = 2,
                video_frame_rate = 50,
                optimized_for_streaming = True
            )
        ]

##########################################################################################
def PlayVideo(url):
    return HTTP.Request(url).content
